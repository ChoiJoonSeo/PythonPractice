# '#' 기호 뒤에 적는 글자를 주석이라고 한다.
# 내가 적었던 코드를 나중에 이해하기 쉽게 도와주는 역할

cjs = 10 # cjs라는 바구니에 10이라는 숫자를 담았음.
cjs = 100 # 위에 있었던 10이라는 값은 사라졌음. 100이라는 숫자를 세로 담았음.
print(cjs) # 10을 출력하겠다.

first_data = 1 # First data
# 정보를 담는 바구니 <- 변수
# 변수의 이름을 짓는 법
# Choi Jun Seo -> choi_jun_seo
# 스페이스바 대신 _(언더바)를 사용
# 변수 이름에 대문자는 절대 안 쓴다
# TMI: 자바에서는 choiJunSeo
# -> 언어마다 작성 규칙이 좀 다르다. (좋은 개발자들이 암묵적으로 지키는 규칙. 사실 안 지켜도 돼)

js = 24
choi_hyoen_seo = 21

# 2023 - 01 - 11
a = '안녕하세요' # 작은 따옴표도 문자열 -> 편하기 때문에 파이썬에서는 그냥 많이 써도 됨
# 자바의 경우
a = 'a' #  문자열 X Character 데이터가 됨 -> 아스키 코드
# 파이썬에서 아스키코드를 알고 싶을 때
a_asc = ord('a') # a 라는 문자의 아스키코드를 돌려줌 = 97

print(a_asc)
b = '\''

cjs: str = '안녕하세요\n'
cjs2 = '반갑습니다'
age: int = 24 # 숫자 24 X 문자 24 O
# 타입 힌트 -> 메모 용도. 데이터 형태를 강제하지는 않으니 조심해야 된다.
# : 타입유형 (: int, : str, : bool ...)

# 스페이스바 열심히 쳐주는 건 매너
cjs3 = cjs + cjs2 # 문자열을 하나로 합치겠다.
# cjs4 = cjs + age

# 컴퓨터에서는 숫자의 시작이 0인 경우가 많음
cjs = '안녕하세요' # 1 2 3 4 5 (X) 0 1 2 3 4 (O)
ahn = cjs[0]
ahn = cjs[-5] # 거꾸로 인덱싱하는 음수는 -1부터 시작한다.
# 음수 인덱스는 -1 이외에는 크게 사용하지 않음.

cjs_cpy = cjs[:] # cjs[0:5]
haseyo = cjs[2:5]
haseyo = cjs[2:] # 인덱스 2부터 마지막까지 다 가져옴
hase = cjs[2:4]
anh = cjs[0:3] # 안녕하
anh = cjs[:3] # 처음부터 인덱스 (3-1)까지 다 가져옴
# 슬라이스 유의할 점. 끝 지점을 적을 때 자를 범위보다 +1 숫자를 넣어야 됨

cjs_len = len(cjs) # 5
# len 함수는 정말 많이 씀.

# 숫자
f: float = 0.12 # 소수로 저장
answer = int(1e9) # 어마 무시하게 큰 수를 정의할 때
div, mod = divmod(5, 2) # 몫, 나머지를 동시에 돌려줌
div, mod = 5 // 2, 5 % 2

# 변수
a = 1 + 2 # 3
b = 1
c = 2
d = b + c # 3, 변수끼리도 사칙연산 가능하다.
b = 3 # CPU, 램(메모리)....
e = 3
# 내가 적은 코드는 -> 램으로 감 (메모리에 올려짐)
# 파이썬은 원시 타입이 없고, 다 객체다.
# 1. 3이라는 값을 메모리에 올림
# 2. b라는 변수는 메모리의 3이라는 값을 가리켜 (C언어에서는 포인터라고 함)
# 그래서 사실 b 자체가 3이라는 값을 가지는 게 아니고, b는 3이라는 걸 가리키고 있는 것
# e도 3이라는 값을 가지는 게 아니고, 3이라는 걸 가리키고 있는 것
print(id(d))
print(id(b)) # 주소를 알려줌
print(id(e))
b = 4 # b는 이제 더 이상 3을 가리키지 않고, 4를 가리킴
print(id(b))
print(id(4))

# 변수에 할당 가능한 데이터 유형
z: int = 1 # 하나의 변수에는 하나의 데이터 유형만 저장하는 게 좋다. (나도 나중에 헷갈리게 됨)
z = z + 1
z += 1 # 윗 코드랑 똑같지만, 짧아서 편하다.

z = z * 2
z *= 2

z = z ** 2
z **= 2

z = z % 2
z %= 2

x = "안녕"
x = x + '!'
x += '!'

x = x * 3 # 안녕!안녕!안녕!
x *= 3 # 안녕!안녕!안녕!안녕!안녕!안녕!안녕!안녕!안녕!

# 입력 출력
# 출력은 print
# 입력은 input
# y = int(input()) # 숫자로 입력을 해도 무조건 문자열로 저장한다. input 자체를 int로 많이 감싸기도 한다.
# '24' 를 int() 에 전달하면, 숫자 24가 된다.
yy = 2
# yyy = yy + y # y는 문자열이라서 숫자랑 못 더한다.
# print(yyy)
# yyyy = float(input()) # float은 정수를 입력해도 문제 없음. (.0이 추가됨)
# print(yyyy)

yyyyyy = '내 나이:'
yyyyy = 24
print(yyyyyy + str(yyyyy)) # 숫자 + 문자는 안 되기 때문에, 숫자를 문자로 바꿈

dog = '''|\\_/|
|q p|   /}
( 0 )"""\\
|"^"`    |
||_/=\\\\__|'''
print(dog)

print('hi')


#2-4
# 함수 -> 어떤 값을 돌려줄 수 있음.
# a = input() # ....Enter -> Enter 포함을 안 시킴
# b = sys.stdin.readline().rstrip() # input이랑 똑같음 abc <- Enter까지 포함
c = 'x'.islower() # 숫자로 된 문자열이라는 걸 알려줌


d = '1@2@3@4@5'.split("@")
e = '1 2 3 4 5'.split() # 기본이 공백
print(d)
print(e)

# format 대신 f''
aa = '{} {}'.format(10, 20)
aaa = f'나이는 {24}살 입니다'
print(aaa)
